=begin
#Brightcove Analytics API Reference

#Reference for the Brightcove Analytics API, used to retrieve analytics data for your accounts. To test API requests, you can use our <a href=\"/getting-started/concepts-testing-tools-brightcove-apis.html\" target=\"_blank\">API Testing Tools</a>.  For additional in-depth guides to features of the API, see the **[general documentation](/analytics/index.html)**.   **Base URL**: https://analytics.api.brightcove.com

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::AnalyticsReportApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AnalyticsReportApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::AnalyticsReportApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AnalyticsReportApi' do
    it 'should create an instance of AnalyticsReportApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::AnalyticsReportApi)
    end
  end

  # unit tests for get_analytics_report
  # Get Analytics Report
  # Get an analytics report on one or more dimensions. Note that the fields returned in the response will vary according to the dimension(s) requested and the fields specified in the fields parameter. See [the API Overview](/analytics/getting-started/analytics-api-overview-dimensions-fields-and-parameters.html) and the dimension guides for details.
  # @param content_type Content-Type: application/json
  # @param authorization Authorization: Bearer access_token (see Getting Access Tokens)
  # @param accept_encoding Accept-Encoding: gzip (optional)
  # @param accounts One or more account ids, separated by commas
  # @param dimensions One or more dimensions to report on; see [Multiple Dimensions](/analytics/getting-started/analytics-api-overview-dimensions-fields-and-parameters.html) or which combined dimensions are supported  Dimensions:   - account   - browser_type   - city   - country   - date   - date_hour   - destination_domain   - destination_path   - device_os   - device_manufacturer   - device_type   - live_stream   - player   - referrer_domain   - region   - search_terms   - social_platform   - source_type   - video
  # @param where one or more &#39;dimension&#x3D;&#x3D;value&#39; pairs to filter the results; for live, the only available filters are &#x60;country&#x60;, &#x60;device-type&#x60;, and &#x60;video&#x60;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of items to return
  # @option opts [Integer] :offset Number of items to skip
  # @option opts [String] :sort Field to sort results by (prefix with &#x60;-&#x60; for descending order)
  # @option opts [String] :fields Fields to return - available fields varies according to the dimensions - see the [Overview: Analytics API](/analytics/getting-started/analytics-api-overview-dimensions-fields-and-parameters.html) for more details
  # @option opts [OneOfstringinteger] :from &#39;Start time for the period covered by the report — epoch time in milliseconds (&#x60;1535654206775&#x60;) or a date in the format &#x60;yyyy-mm-dd&#x60; (such as &#x60;2013-09-26&#x60;)&#39;
  # @option opts [OneOfstringinteger] :to End time for the period covered by the report — &#x60;now&#x60; or epoch time in milliseconds (&#x60;1535654206775&#x60;) or a date in the format &#x60;yyyy-mm-dd&#x60; (such as &#x60;2013-09-26&#x60;)
  # @option opts [Format] :format format to return the results in
  # @option opts [Boolean] :reconciled if true, only reconciled data is returned; if false, only realtime data is returned; if not present, both reconciled and realtime data are returned
  # @return [GetAnalyticsReportResponse]
  describe 'get_analytics_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_date_range
  # Get Available Date Range
  # Get the date range for which reconciled data is available for any Analytics API report. All parameters are allowed, but only account, dimensions, and where affect the result - all others are ignored. Note that date range for this request must fall within the available date range for the dimensions requested.
  # @param accounts One or more account ids, separated by commas
  # @param dimensions One or more dimensions to report on; see [Multiple Dimensions](/analytics/getting-started/analytics-api-overview-dimensions-fields-and-parameters.html) or which combined dimensions are supported  Dimensions:   - account   - browser_type   - city   - country   - date   - date_hour   - destination_domain   - destination_path   - device_os   - device_manufacturer   - device_type   - live_stream   - player   - referrer_domain   - region   - search_terms   - social_platform   - source_type   - video
  # @param content_type Content-Type: application/json
  # @param authorization Authorization: Bearer access_token (see Getting Access Tokens)
  # @param accept_encoding Accept-Encoding: gzip (optional)
  # @param where one or more &#39;dimension&#x3D;&#x3D;value&#39; pairs to filter the results; for live, the only available filters are &#x60;country&#x60;, &#x60;device-type&#x60;, and &#x60;video&#x60;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of items to return
  # @option opts [Integer] :offset Number of items to skip
  # @option opts [String] :sort Field to sort results by (prefix with &#x60;-&#x60; for descending order)
  # @option opts [String] :fields Fields to return - available fields varies according to the dimensions - see the [Overview: Analytics API](/analytics/getting-started/analytics-api-overview-dimensions-fields-and-parameters.html) for more details
  # @option opts [OneOfstringinteger] :from &#39;Start time for the period covered by the report — epoch time in milliseconds (&#x60;1535654206775&#x60;) or a date in the format &#x60;yyyy-mm-dd&#x60; (such as &#x60;2013-09-26&#x60;)&#39;
  # @option opts [OneOfstringinteger] :to End time for the period covered by the report — &#x60;now&#x60; or epoch time in milliseconds (&#x60;1535654206775&#x60;) or a date in the format &#x60;yyyy-mm-dd&#x60; (such as &#x60;2013-09-26&#x60;)
  # @option opts [Format] :format format to return the results in
  # @option opts [Boolean] :reconciled if true, only reconciled data is returned; if false, only realtime data is returned; if not present, both reconciled and realtime data are returned
  # @return [GetAvailableDateRangeResponse]
  describe 'get_available_date_range test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
